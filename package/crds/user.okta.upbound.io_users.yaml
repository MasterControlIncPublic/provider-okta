---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: users.user.okta.upbound.io
spec:
  group: user.okta.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - okta
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  city:
                    description: User city
                    type: string
                  costCenter:
                    description: User cost center
                    type: string
                  countryCode:
                    description: User country code
                    type: string
                  customProfileAttributes:
                    description: JSON formatted custom attributes for a user. It must
                      be JSON due to various types Okta allows.
                    type: string
                  customProfileAttributesToIgnore:
                    items:
                      type: string
                    type: array
                  department:
                    description: User department
                    type: string
                  displayName:
                    description: User display name, suitable to show end users
                    type: string
                  division:
                    description: User division
                    type: string
                  email:
                    description: User primary email address
                    type: string
                  employeeNumber:
                    description: User employee number
                    type: string
                  expirePasswordOnCreate:
                    description: If set to `true`, the user will have to change the
                      password at the next login. This property will be used when
                      user is being created and works only when `password` field is
                      set
                    type: boolean
                  firstName:
                    description: User first name
                    type: string
                  honorificPrefix:
                    description: User honorific prefix
                    type: string
                  honorificSuffix:
                    description: User honorific suffix
                    type: string
                  lastName:
                    description: User last name
                    type: string
                  locale:
                    description: User default location
                    type: string
                  login:
                    description: User Okta login
                    type: string
                  manager:
                    description: Manager of User
                    type: string
                  managerId:
                    description: Manager ID of User
                    type: string
                  middleName:
                    description: User middle name
                    type: string
                  mobilePhone:
                    description: User mobile phone number
                    type: string
                  nickName:
                    description: User nickname
                    type: string
                  oldPasswordSecretRef:
                    description: Old User Password. Should be only set in case the
                      password was not changed using the provider
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  organization:
                    description: User organization
                    type: string
                  passwordHash:
                    description: Specifies a hashed password to import into Okta.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm used to generate the hash using
                            the password
                          type: string
                        salt:
                          description: Only required for salted hashes
                          type: string
                        saltOrder:
                          description: Specifies whether salt was pre- or postfixed
                            to the password before hashing
                          type: string
                        value:
                          description: For SHA-512, SHA-256, SHA-1, MD5, This is the
                            actual base64-encoded hash of the password (and salt,
                            if used). This is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5
                            digest that was computed by either pre-fixing or post-fixing
                            the salt to the password, depending on the saltOrder.
                            If a salt was not used in the source system, then this
                            should just be the the Base64 encoded value of the password's
                            SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is
                            the actual radix64-encoded hashed password.
                          type: string
                        workFactor:
                          description: Governs the strength of the hash and the time
                            required to compute it. Only required for BCRYPT algorithm
                          type: number
                      required:
                      - algorithm
                      - value
                      type: object
                    type: array
                  passwordInlineHook:
                    description: When specified, the Password Inline Hook is triggered
                      to handle verification of the end user's password the first
                      time the user tries to sign in
                    type: string
                  passwordSecretRef:
                    description: User Password
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  postalAddress:
                    description: User mailing address
                    type: string
                  preferredLanguage:
                    description: User preferred language
                    type: string
                  primaryPhone:
                    description: User primary phone number
                    type: string
                  profileUrl:
                    description: User online profile (web page)
                    type: string
                  recoveryAnswerSecretRef:
                    description: User Password Recovery Answer
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  recoveryQuestion:
                    description: User Password Recovery Question
                    type: string
                  secondEmail:
                    description: User secondary email address, used for account recovery
                    type: string
                  skipRoles:
                    description: Do not populate user roles information (prevents
                      additional API call)
                    type: boolean
                  state:
                    description: User state or region
                    type: string
                  status:
                    description: The status of the User in Okta - remove to set user
                      back to active/provisioned
                    type: string
                  streetAddress:
                    description: User street address
                    type: string
                  timezone:
                    description: User default timezone
                    type: string
                  title:
                    description: User title
                    type: string
                  userType:
                    description: User employee type
                    type: string
                  zipCode:
                    description: User zipcode or postal code
                    type: string
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: email is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.email)
            - message: firstName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.firstName)
            - message: lastName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.lastName)
            - message: login is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.login)
          status:
            description: UserStatus defines the observed state of User.
            properties:
              atProvider:
                properties:
                  city:
                    description: User city
                    type: string
                  costCenter:
                    description: User cost center
                    type: string
                  countryCode:
                    description: User country code
                    type: string
                  customProfileAttributes:
                    description: JSON formatted custom attributes for a user. It must
                      be JSON due to various types Okta allows.
                    type: string
                  customProfileAttributesToIgnore:
                    items:
                      type: string
                    type: array
                  department:
                    description: User department
                    type: string
                  displayName:
                    description: User display name, suitable to show end users
                    type: string
                  division:
                    description: User division
                    type: string
                  email:
                    description: User primary email address
                    type: string
                  employeeNumber:
                    description: User employee number
                    type: string
                  expirePasswordOnCreate:
                    description: If set to `true`, the user will have to change the
                      password at the next login. This property will be used when
                      user is being created and works only when `password` field is
                      set
                    type: boolean
                  firstName:
                    description: User first name
                    type: string
                  honorificPrefix:
                    description: User honorific prefix
                    type: string
                  honorificSuffix:
                    description: User honorific suffix
                    type: string
                  id:
                    type: string
                  lastName:
                    description: User last name
                    type: string
                  locale:
                    description: User default location
                    type: string
                  login:
                    description: User Okta login
                    type: string
                  manager:
                    description: Manager of User
                    type: string
                  managerId:
                    description: Manager ID of User
                    type: string
                  middleName:
                    description: User middle name
                    type: string
                  mobilePhone:
                    description: User mobile phone number
                    type: string
                  nickName:
                    description: User nickname
                    type: string
                  organization:
                    description: User organization
                    type: string
                  passwordHash:
                    description: Specifies a hashed password to import into Okta.
                    items:
                      properties:
                        algorithm:
                          description: The algorithm used to generate the hash using
                            the password
                          type: string
                        salt:
                          description: Only required for salted hashes
                          type: string
                        saltOrder:
                          description: Specifies whether salt was pre- or postfixed
                            to the password before hashing
                          type: string
                        value:
                          description: For SHA-512, SHA-256, SHA-1, MD5, This is the
                            actual base64-encoded hash of the password (and salt,
                            if used). This is the Base64 encoded value of the SHA-512/SHA-256/SHA-1/MD5
                            digest that was computed by either pre-fixing or post-fixing
                            the salt to the password, depending on the saltOrder.
                            If a salt was not used in the source system, then this
                            should just be the the Base64 encoded value of the password's
                            SHA-512/SHA-256/SHA-1/MD5 digest. For BCRYPT, This is
                            the actual radix64-encoded hashed password.
                          type: string
                        workFactor:
                          description: Governs the strength of the hash and the time
                            required to compute it. Only required for BCRYPT algorithm
                          type: number
                      type: object
                    type: array
                  passwordInlineHook:
                    description: When specified, the Password Inline Hook is triggered
                      to handle verification of the end user's password the first
                      time the user tries to sign in
                    type: string
                  postalAddress:
                    description: User mailing address
                    type: string
                  preferredLanguage:
                    description: User preferred language
                    type: string
                  primaryPhone:
                    description: User primary phone number
                    type: string
                  profileUrl:
                    description: User online profile (web page)
                    type: string
                  rawStatus:
                    description: The raw status of the User in Okta - (status is mapped)
                    type: string
                  recoveryQuestion:
                    description: User Password Recovery Question
                    type: string
                  secondEmail:
                    description: User secondary email address, used for account recovery
                    type: string
                  skipRoles:
                    description: Do not populate user roles information (prevents
                      additional API call)
                    type: boolean
                  state:
                    description: User state or region
                    type: string
                  status:
                    description: The status of the User in Okta - remove to set user
                      back to active/provisioned
                    type: string
                  streetAddress:
                    description: User street address
                    type: string
                  timezone:
                    description: User default timezone
                    type: string
                  title:
                    description: User title
                    type: string
                  userType:
                    description: User employee type
                    type: string
                  zipCode:
                    description: User zipcode or postal code
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
