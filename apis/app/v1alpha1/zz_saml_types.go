/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AttributeStatementsObservation struct {

	// Type of group attribute filter. Valid values are: "STARTS_WITH", "EQUALS", "CONTAINS", or "REGEX"
	// Type of group attribute filter
	FilterType *string `json:"filterType,omitempty" tf:"filter_type,omitempty"`

	// Filter value to use.
	// Filter value to use
	FilterValue *string `json:"filterValue,omitempty" tf:"filter_value,omitempty"`

	// The name of the attribute statement.
	// The reference name of the attribute statement
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The attribute namespace. It can be set to "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified", "urn:oasis:names:tc:SAML:2.0:attrname-format:uri", or "urn:oasis:names:tc:SAML:2.0:attrname-format:basic".
	// The name format of the attribute
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// The type of attribute statement value. Valid values are: "EXPRESSION" or "GROUP". Default is "EXPRESSION".
	// The type of attribute statements object
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Array of values to use.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type AttributeStatementsParameters struct {

	// Type of group attribute filter. Valid values are: "STARTS_WITH", "EQUALS", "CONTAINS", or "REGEX"
	// Type of group attribute filter
	// +kubebuilder:validation:Optional
	FilterType *string `json:"filterType,omitempty" tf:"filter_type,omitempty"`

	// Filter value to use.
	// Filter value to use
	// +kubebuilder:validation:Optional
	FilterValue *string `json:"filterValue,omitempty" tf:"filter_value,omitempty"`

	// The name of the attribute statement.
	// The reference name of the attribute statement
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The attribute namespace. It can be set to "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified", "urn:oasis:names:tc:SAML:2.0:attrname-format:uri", or "urn:oasis:names:tc:SAML:2.0:attrname-format:basic".
	// The name format of the attribute
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// The type of attribute statement value. Valid values are: "EXPRESSION" or "GROUP". Default is "EXPRESSION".
	// The type of attribute statements object
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Array of values to use.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type KeysObservation struct {

	// Date created.
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// RSA exponent.
	E *string `json:"e,omitempty" tf:"e,omitempty"`

	// Date the key expires.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// Key ID.
	Kid *string `json:"kid,omitempty" tf:"kid,omitempty"`

	// Identifies the cryptographic algorithm family used with the key.
	Kty *string `json:"kty,omitempty" tf:"kty,omitempty"`

	// Date the key was last updated.
	LastUpdated *string `json:"lastUpdated,omitempty" tf:"last_updated,omitempty"`

	// RSA modulus.
	N *string `json:"n,omitempty" tf:"n,omitempty"`

	// Intended use of the public key.
	Use *string `json:"use,omitempty" tf:"use,omitempty"`

	// X.509 certificate chain.
	X5C []*string `json:"x5c,omitempty" tf:"x5c,omitempty"`

	// X.509 certificate SHA-256 thumbprint.
	X5TS256 *string `json:"x5tS256,omitempty" tf:"x5t_s256,omitempty"`
}

type KeysParameters struct {
}

type SAMLObservation struct {

	// Custom error page URL.
	// Custom error page URL
	AccessibilityErrorRedirectURL *string `json:"accessibilityErrorRedirectUrl,omitempty" tf:"accessibility_error_redirect_url,omitempty"`

	// Custom login page for this application.
	// Custom login page URL
	AccessibilityLoginRedirectURL *string `json:"accessibilityLoginRedirectUrl,omitempty" tf:"accessibility_login_redirect_url,omitempty"`

	// Enable self-service. Default is: false.
	// Enable self service
	AccessibilitySelfService *bool `json:"accessibilitySelfService,omitempty" tf:"accessibility_self_service,omitempty"`

	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	// List of ACS endpoints for this SAML application
	AcsEndpoints []*string `json:"acsEndpoints,omitempty" tf:"acs_endpoints,omitempty"`

	// Application notes for admins.
	// Application notes for admins.
	AdminNote *string `json:"adminNote,omitempty" tf:"admin_note,omitempty"`

	// Displays specific appLinks for the app. The value for each application link should be boolean.
	// Displays specific appLinks for the app
	AppLinksJSON *string `json:"appLinksJson,omitempty" tf:"app_links_json,omitempty"`

	// Application settings in JSON format.
	// Application settings in JSON format
	AppSettingsJSON *string `json:"appSettingsJson,omitempty" tf:"app_settings_json,omitempty"`

	// Determines whether the SAML assertion is digitally signed.
	// Determines whether the SAML assertion is digitally signed
	AssertionSigned *bool `json:"assertionSigned,omitempty" tf:"assertion_signed,omitempty"`

	// List of SAML Attribute statements.
	AttributeStatements []AttributeStatementsObservation `json:"attributeStatements,omitempty" tf:"attribute_statements,omitempty"`

	// Audience restriction.
	// Audience Restriction
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	// The ID of the associated app_signon_policy. If this property is removed from the application the default sign-on-policy will be associated with this application.
	// Id of this apps authentication policy
	AuthenticationPolicy *string `json:"authenticationPolicy,omitempty" tf:"authentication_policy,omitempty"`

	// Identifies the SAML authentication context class for the assertion’s authentication statement.
	// Identifies the SAML authentication context class for the assertion’s authentication statement
	AuthnContextClassRef *string `json:"authnContextClassRef,omitempty" tf:"authn_context_class_ref,omitempty"`

	// Display auto submit toolbar. Default is: false
	// Display auto submit toolbar
	AutoSubmitToolbar *bool `json:"autoSubmitToolbar,omitempty" tf:"auto_submit_toolbar,omitempty"`

	// The raw signing certificate.
	// cert from SAML XML metadata payload
	Certificate *string `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// Identifies a specific application resource in an IDP initiated SSO scenario.
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	DefaultRelayState *string `json:"defaultRelayState,omitempty" tf:"default_relay_state,omitempty"`

	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	// Identifies the location where the SAML response is intended to be sent inside of the SAML assertion
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	// Determines the digest algorithm used to digitally sign the SAML assertion and response
	DigestAlgorithm *string `json:"digestAlgorithm,omitempty" tf:"digest_algorithm,omitempty"`

	// Url that can be used to embed this application into another portal.
	// The url that can be used to embed this application in other portals.
	EmbedURL *string `json:"embedUrl,omitempty" tf:"embed_url,omitempty"`

	// Application notes for end users.
	// Application notes for end users.
	EnduserNote *string `json:"enduserNote,omitempty" tf:"enduser_note,omitempty"`

	// Entity ID, the ID portion of the entity_url.
	// Entity ID, the ID portion of the entity_url
	EntityKey *string `json:"entityKey,omitempty" tf:"entity_key,omitempty"`

	// Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8.
	// Entity URL for instance http://www.okta.com/exk1fcia6d6EMsf331d8
	EntityURL *string `json:"entityUrl,omitempty" tf:"entity_url,omitempty"`

	// features enabled. Notice: you can't currently configure provisioning features via the API.
	// features to enable
	Features []*string `json:"features,omitempty" tf:"features,omitempty"`

	// urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.
	// urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Post location from the SAML metadata.
	HTTPPostBinding *string `json:"httpPostBinding,omitempty" tf:"http_post_binding,omitempty"`

	// urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.
	// urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect location from the SAML metadata.
	HTTPRedirectBinding *string `json:"httpRedirectBinding,omitempty" tf:"http_redirect_binding,omitempty"`

	// Do not display application icon on mobile app. Default is: false
	// Do not display application icon on mobile app
	HideIos *bool `json:"hideIos,omitempty" tf:"hide_ios,omitempty"`

	// Do not display application icon to users. Default is: false
	// Do not display application icon to users
	HideWeb *bool `json:"hideWeb,omitempty" tf:"hide_web,omitempty"`

	// Prompt user to re-authenticate if SP asks for it. Default is: false
	// Prompt user to re-authenticate if SP asks for it
	HonorForceAuthn *bool `json:"honorForceAuthn,omitempty" tf:"honor_force_authn,omitempty"`

	// id of application.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// SAML issuer ID.
	// SAML issuer ID
	IdpIssuer *string `json:"idpIssuer,omitempty" tf:"idp_issuer,omitempty"`

	// Early Access Property. Enables Federation Broker Mode.
	// *Early Access Property*. Enable Federation Broker Mode.
	ImplicitAssignment *bool `json:"implicitAssignment,omitempty" tf:"implicit_assignment,omitempty"`

	// Saml Inline Hook associated with the application.
	// Saml Inline Hook setting
	InlineHookID *string `json:"inlineHookId,omitempty" tf:"inline_hook_id,omitempty"`

	// Certificate key ID.
	// Certificate ID
	KeyID *string `json:"keyId,omitempty" tf:"key_id,omitempty"`

	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with key_years_valid.
	// Certificate name. This modulates the rotation of keys. New name == new key.
	KeyName *string `json:"keyName,omitempty" tf:"key_name,omitempty"`

	// Number of years the certificate is valid (2 - 10 years).
	// Number of years the certificate is valid.
	KeyYearsValid *float64 `json:"keyYearsValid,omitempty" tf:"key_years_valid,omitempty"`

	// An array of all key credentials for the application. Format of each entry is as follows:
	// Application keys
	Keys []KeysObservation `json:"keys,omitempty" tf:"keys,omitempty"`

	// label of application.
	// Pretty name of app.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	// Local path to logo of the application.
	Logo *string `json:"logo,omitempty" tf:"logo,omitempty"`

	// Direct link of application logo.
	// URL of the application's logo
	LogoURL *string `json:"logoUrl,omitempty" tf:"logo_url,omitempty"`

	// The raw SAML metadata in XML.
	// SAML xml metadata payload
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// SAML xml metadata URL.
	// SAML xml metadata URL
	MetadataURL *string `json:"metadataUrl,omitempty" tf:"metadata_url,omitempty"`

	// The name of the attribute statement.
	// Name of the app.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:
	// Name of preexisting SAML application. For instance 'slack'
	PreconfiguredApp *string `json:"preconfiguredApp,omitempty" tf:"preconfigured_app,omitempty"`

	// The location where the app may present the SAML assertion.
	// The location where the app may present the SAML assertion
	Recipient *string `json:"recipient,omitempty" tf:"recipient,omitempty"`

	// Denotes whether the request is compressed or not.
	// Denotes whether the request is compressed or not.
	RequestCompressed *bool `json:"requestCompressed,omitempty" tf:"request_compressed,omitempty"`

	// Determines whether the SAML auth response message is digitally signed.
	// Determines whether the SAML auth response message is digitally signed
	ResponseSigned *bool `json:"responseSigned,omitempty" tf:"response_signed,omitempty"`

	// SAML Signed Request enabled
	// SAML Signed Request enabled
	SAMLSignedRequestEnabled *bool `json:"samlSignedRequestEnabled,omitempty" tf:"saml_signed_request_enabled,omitempty"`

	// SAML version for the app's sign-on mode. Valid values are: "2.0" or "1.1". Default is "2.0".
	// SAML version for the app's sign-on mode
	SAMLVersion *string `json:"samlVersion,omitempty" tf:"saml_version,omitempty"`

	// Sign-on mode of application.
	// Sign on mode of application.
	SignOnMode *string `json:"signOnMode,omitempty" tf:"sign_on_mode,omitempty"`

	// Signature algorithm used ot digitally sign the assertion and response.
	// Signature algorithm used ot digitally sign the assertion and response
	SignatureAlgorithm *string `json:"signatureAlgorithm,omitempty" tf:"signature_algorithm,omitempty"`

	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without -----BEGIN CERTIFICATE----- and -----END CERTIFICATE-----, see official documentation.
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests
	SingleLogoutCertificate *string `json:"singleLogoutCertificate,omitempty" tf:"single_logout_certificate,omitempty"`

	// The issuer of the Service Provider that generates the Single Logout request.
	// The issuer of the Service Provider that generates the Single Logout request
	SingleLogoutIssuer *string `json:"singleLogoutIssuer,omitempty" tf:"single_logout_issuer,omitempty"`

	// The location where the logout response is sent.
	// The location where the logout response is sent
	SingleLogoutURL *string `json:"singleLogoutUrl,omitempty" tf:"single_logout_url,omitempty"`

	// SAML service provider issuer.
	// SAML SP issuer ID
	SpIssuer *string `json:"spIssuer,omitempty" tf:"sp_issuer,omitempty"`

	// Single Sign-on Url.
	// Single Sign On URL
	SsoURL *string `json:"ssoUrl,omitempty" tf:"sso_url,omitempty"`

	// status of application.
	// Status of application.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Identifies the SAML processing rules.
	// Identifies the SAML processing rules.
	SubjectNameIDFormat *string `json:"subjectNameIdFormat,omitempty" tf:"subject_name_id_format,omitempty"`

	// Template for app user's username when a user is assigned to the app.
	// Template for app user's username when a user is assigned to the app
	SubjectNameIDTemplate *string `json:"subjectNameIdTemplate,omitempty" tf:"subject_name_id_template,omitempty"`

	// Username template. Default is: "${source.login}"
	// Username template
	UserNameTemplate *string `json:"userNameTemplate,omitempty" tf:"user_name_template,omitempty"`

	// Push username on update. Valid values: "PUSH" and "DONT_PUSH".
	// Push username on update
	UserNameTemplatePushStatus *string `json:"userNameTemplatePushStatus,omitempty" tf:"user_name_template_push_status,omitempty"`

	// Username template suffix.
	// Username template suffix
	UserNameTemplateSuffix *string `json:"userNameTemplateSuffix,omitempty" tf:"user_name_template_suffix,omitempty"`

	// Username template type. Default is: "BUILT_IN".
	// Username template type
	UserNameTemplateType *string `json:"userNameTemplateType,omitempty" tf:"user_name_template_type,omitempty"`
}

type SAMLParameters struct {

	// Custom error page URL.
	// Custom error page URL
	// +kubebuilder:validation:Optional
	AccessibilityErrorRedirectURL *string `json:"accessibilityErrorRedirectUrl,omitempty" tf:"accessibility_error_redirect_url,omitempty"`

	// Custom login page for this application.
	// Custom login page URL
	// +kubebuilder:validation:Optional
	AccessibilityLoginRedirectURL *string `json:"accessibilityLoginRedirectUrl,omitempty" tf:"accessibility_login_redirect_url,omitempty"`

	// Enable self-service. Default is: false.
	// Enable self service
	// +kubebuilder:validation:Optional
	AccessibilitySelfService *bool `json:"accessibilitySelfService,omitempty" tf:"accessibility_self_service,omitempty"`

	// An array of ACS endpoints. You can configure a maximum of 100 endpoints.
	// List of ACS endpoints for this SAML application
	// +kubebuilder:validation:Optional
	AcsEndpoints []*string `json:"acsEndpoints,omitempty" tf:"acs_endpoints,omitempty"`

	// Application notes for admins.
	// Application notes for admins.
	// +kubebuilder:validation:Optional
	AdminNote *string `json:"adminNote,omitempty" tf:"admin_note,omitempty"`

	// Displays specific appLinks for the app. The value for each application link should be boolean.
	// Displays specific appLinks for the app
	// +kubebuilder:validation:Optional
	AppLinksJSON *string `json:"appLinksJson,omitempty" tf:"app_links_json,omitempty"`

	// Application settings in JSON format.
	// Application settings in JSON format
	// +kubebuilder:validation:Optional
	AppSettingsJSON *string `json:"appSettingsJson,omitempty" tf:"app_settings_json,omitempty"`

	// Determines whether the SAML assertion is digitally signed.
	// Determines whether the SAML assertion is digitally signed
	// +kubebuilder:validation:Optional
	AssertionSigned *bool `json:"assertionSigned,omitempty" tf:"assertion_signed,omitempty"`

	// List of SAML Attribute statements.
	// +kubebuilder:validation:Optional
	AttributeStatements []AttributeStatementsParameters `json:"attributeStatements,omitempty" tf:"attribute_statements,omitempty"`

	// Audience restriction.
	// Audience Restriction
	// +kubebuilder:validation:Optional
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	// The ID of the associated app_signon_policy. If this property is removed from the application the default sign-on-policy will be associated with this application.
	// Id of this apps authentication policy
	// +kubebuilder:validation:Optional
	AuthenticationPolicy *string `json:"authenticationPolicy,omitempty" tf:"authentication_policy,omitempty"`

	// Identifies the SAML authentication context class for the assertion’s authentication statement.
	// Identifies the SAML authentication context class for the assertion’s authentication statement
	// +kubebuilder:validation:Optional
	AuthnContextClassRef *string `json:"authnContextClassRef,omitempty" tf:"authn_context_class_ref,omitempty"`

	// Display auto submit toolbar. Default is: false
	// Display auto submit toolbar
	// +kubebuilder:validation:Optional
	AutoSubmitToolbar *bool `json:"autoSubmitToolbar,omitempty" tf:"auto_submit_toolbar,omitempty"`

	// Identifies a specific application resource in an IDP initiated SSO scenario.
	// Identifies a specific application resource in an IDP initiated SSO scenario.
	// +kubebuilder:validation:Optional
	DefaultRelayState *string `json:"defaultRelayState,omitempty" tf:"default_relay_state,omitempty"`

	// Identifies the location where the SAML response is intended to be sent inside the SAML assertion.
	// Identifies the location where the SAML response is intended to be sent inside of the SAML assertion
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Determines the digest algorithm used to digitally sign the SAML assertion and response.
	// Determines the digest algorithm used to digitally sign the SAML assertion and response
	// +kubebuilder:validation:Optional
	DigestAlgorithm *string `json:"digestAlgorithm,omitempty" tf:"digest_algorithm,omitempty"`

	// Application notes for end users.
	// Application notes for end users.
	// +kubebuilder:validation:Optional
	EnduserNote *string `json:"enduserNote,omitempty" tf:"enduser_note,omitempty"`

	// Do not display application icon on mobile app. Default is: false
	// Do not display application icon on mobile app
	// +kubebuilder:validation:Optional
	HideIos *bool `json:"hideIos,omitempty" tf:"hide_ios,omitempty"`

	// Do not display application icon to users. Default is: false
	// Do not display application icon to users
	// +kubebuilder:validation:Optional
	HideWeb *bool `json:"hideWeb,omitempty" tf:"hide_web,omitempty"`

	// Prompt user to re-authenticate if SP asks for it. Default is: false
	// Prompt user to re-authenticate if SP asks for it
	// +kubebuilder:validation:Optional
	HonorForceAuthn *bool `json:"honorForceAuthn,omitempty" tf:"honor_force_authn,omitempty"`

	// SAML issuer ID.
	// SAML issuer ID
	// +kubebuilder:validation:Optional
	IdpIssuer *string `json:"idpIssuer,omitempty" tf:"idp_issuer,omitempty"`

	// Early Access Property. Enables Federation Broker Mode.
	// *Early Access Property*. Enable Federation Broker Mode.
	// +kubebuilder:validation:Optional
	ImplicitAssignment *bool `json:"implicitAssignment,omitempty" tf:"implicit_assignment,omitempty"`

	// Saml Inline Hook associated with the application.
	// Saml Inline Hook setting
	// +kubebuilder:validation:Optional
	InlineHookID *string `json:"inlineHookId,omitempty" tf:"inline_hook_id,omitempty"`

	// Certificate name. This modulates the rotation of keys. New name == new key. Required to be set with key_years_valid.
	// Certificate name. This modulates the rotation of keys. New name == new key.
	// +kubebuilder:validation:Optional
	KeyName *string `json:"keyName,omitempty" tf:"key_name,omitempty"`

	// Number of years the certificate is valid (2 - 10 years).
	// Number of years the certificate is valid.
	// +kubebuilder:validation:Optional
	KeyYearsValid *float64 `json:"keyYearsValid,omitempty" tf:"key_years_valid,omitempty"`

	// label of application.
	// Pretty name of app.
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// Local file path to the logo. The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
	// Local path to logo of the application.
	// +kubebuilder:validation:Optional
	Logo *string `json:"logo,omitempty" tf:"logo,omitempty"`

	// name of application from the Okta Integration Network, if not included a custom app will be created.  If not provided the following arguments are required:
	// Name of preexisting SAML application. For instance 'slack'
	// +kubebuilder:validation:Optional
	PreconfiguredApp *string `json:"preconfiguredApp,omitempty" tf:"preconfigured_app,omitempty"`

	// The location where the app may present the SAML assertion.
	// The location where the app may present the SAML assertion
	// +kubebuilder:validation:Optional
	Recipient *string `json:"recipient,omitempty" tf:"recipient,omitempty"`

	// Denotes whether the request is compressed or not.
	// Denotes whether the request is compressed or not.
	// +kubebuilder:validation:Optional
	RequestCompressed *bool `json:"requestCompressed,omitempty" tf:"request_compressed,omitempty"`

	// Determines whether the SAML auth response message is digitally signed.
	// Determines whether the SAML auth response message is digitally signed
	// +kubebuilder:validation:Optional
	ResponseSigned *bool `json:"responseSigned,omitempty" tf:"response_signed,omitempty"`

	// SAML Signed Request enabled
	// SAML Signed Request enabled
	// +kubebuilder:validation:Optional
	SAMLSignedRequestEnabled *bool `json:"samlSignedRequestEnabled,omitempty" tf:"saml_signed_request_enabled,omitempty"`

	// SAML version for the app's sign-on mode. Valid values are: "2.0" or "1.1". Default is "2.0".
	// SAML version for the app's sign-on mode
	// +kubebuilder:validation:Optional
	SAMLVersion *string `json:"samlVersion,omitempty" tf:"saml_version,omitempty"`

	// Signature algorithm used ot digitally sign the assertion and response.
	// Signature algorithm used ot digitally sign the assertion and response
	// +kubebuilder:validation:Optional
	SignatureAlgorithm *string `json:"signatureAlgorithm,omitempty" tf:"signature_algorithm,omitempty"`

	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests.  Note: should be provided without -----BEGIN CERTIFICATE----- and -----END CERTIFICATE-----, see official documentation.
	// x509 encoded certificate that the Service Provider uses to sign Single Logout requests
	// +kubebuilder:validation:Optional
	SingleLogoutCertificate *string `json:"singleLogoutCertificate,omitempty" tf:"single_logout_certificate,omitempty"`

	// The issuer of the Service Provider that generates the Single Logout request.
	// The issuer of the Service Provider that generates the Single Logout request
	// +kubebuilder:validation:Optional
	SingleLogoutIssuer *string `json:"singleLogoutIssuer,omitempty" tf:"single_logout_issuer,omitempty"`

	// The location where the logout response is sent.
	// The location where the logout response is sent
	// +kubebuilder:validation:Optional
	SingleLogoutURL *string `json:"singleLogoutUrl,omitempty" tf:"single_logout_url,omitempty"`

	// SAML service provider issuer.
	// SAML SP issuer ID
	// +kubebuilder:validation:Optional
	SpIssuer *string `json:"spIssuer,omitempty" tf:"sp_issuer,omitempty"`

	// Single Sign-on Url.
	// Single Sign On URL
	// +kubebuilder:validation:Optional
	SsoURL *string `json:"ssoUrl,omitempty" tf:"sso_url,omitempty"`

	// status of application.
	// Status of application.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Identifies the SAML processing rules.
	// Identifies the SAML processing rules.
	// +kubebuilder:validation:Optional
	SubjectNameIDFormat *string `json:"subjectNameIdFormat,omitempty" tf:"subject_name_id_format,omitempty"`

	// Template for app user's username when a user is assigned to the app.
	// Template for app user's username when a user is assigned to the app
	// +kubebuilder:validation:Optional
	SubjectNameIDTemplate *string `json:"subjectNameIdTemplate,omitempty" tf:"subject_name_id_template,omitempty"`

	// Username template. Default is: "${source.login}"
	// Username template
	// +kubebuilder:validation:Optional
	UserNameTemplate *string `json:"userNameTemplate,omitempty" tf:"user_name_template,omitempty"`

	// Push username on update. Valid values: "PUSH" and "DONT_PUSH".
	// Push username on update
	// +kubebuilder:validation:Optional
	UserNameTemplatePushStatus *string `json:"userNameTemplatePushStatus,omitempty" tf:"user_name_template_push_status,omitempty"`

	// Username template suffix.
	// Username template suffix
	// +kubebuilder:validation:Optional
	UserNameTemplateSuffix *string `json:"userNameTemplateSuffix,omitempty" tf:"user_name_template_suffix,omitempty"`

	// Username template type. Default is: "BUILT_IN".
	// Username template type
	// +kubebuilder:validation:Optional
	UserNameTemplateType *string `json:"userNameTemplateType,omitempty" tf:"user_name_template_type,omitempty"`
}

// SAMLSpec defines the desired state of SAML
type SAMLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SAMLParameters `json:"forProvider"`
}

// SAMLStatus defines the observed state of SAML.
type SAMLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SAMLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SAML is the Schema for the SAMLs API. Creates a SAML Application.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,okta}
type SAML struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.label)",message="label is a required parameter"
	Spec   SAMLSpec   `json:"spec"`
	Status SAMLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SAMLList contains a list of SAMLs
type SAMLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SAML `json:"items"`
}

// Repository type metadata.
var (
	SAML_Kind             = "SAML"
	SAML_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SAML_Kind}.String()
	SAML_KindAPIVersion   = SAML_Kind + "." + CRDGroupVersion.String()
	SAML_GroupVersionKind = CRDGroupVersion.WithKind(SAML_Kind)
)

func init() {
	SchemeBuilder.Register(&SAML{}, &SAMLList{})
}
