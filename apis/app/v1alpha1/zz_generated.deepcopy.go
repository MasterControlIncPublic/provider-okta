//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyAssignment) DeepCopyInto(out *AccessPolicyAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyAssignment.
func (in *AccessPolicyAssignment) DeepCopy() *AccessPolicyAssignment {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessPolicyAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyAssignmentList) DeepCopyInto(out *AccessPolicyAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessPolicyAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyAssignmentList.
func (in *AccessPolicyAssignmentList) DeepCopy() *AccessPolicyAssignmentList {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessPolicyAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyAssignmentObservation) DeepCopyInto(out *AccessPolicyAssignmentObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyAssignmentObservation.
func (in *AccessPolicyAssignmentObservation) DeepCopy() *AccessPolicyAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyAssignmentParameters) DeepCopyInto(out *AccessPolicyAssignmentParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyAssignmentParameters.
func (in *AccessPolicyAssignmentParameters) DeepCopy() *AccessPolicyAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyAssignmentSpec) DeepCopyInto(out *AccessPolicyAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyAssignmentSpec.
func (in *AccessPolicyAssignmentSpec) DeepCopy() *AccessPolicyAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessPolicyAssignmentStatus) DeepCopyInto(out *AccessPolicyAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessPolicyAssignmentStatus.
func (in *AccessPolicyAssignmentStatus) DeepCopy() *AccessPolicyAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeStatementsObservation) DeepCopyInto(out *AttributeStatementsObservation) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.FilterValue != nil {
		in, out := &in.FilterValue, &out.FilterValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeStatementsObservation.
func (in *AttributeStatementsObservation) DeepCopy() *AttributeStatementsObservation {
	if in == nil {
		return nil
	}
	out := new(AttributeStatementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeStatementsParameters) DeepCopyInto(out *AttributeStatementsParameters) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.FilterValue != nil {
		in, out := &in.FilterValue, &out.FilterValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeStatementsParameters.
func (in *AttributeStatementsParameters) DeepCopy() *AttributeStatementsParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeStatementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoLogin) DeepCopyInto(out *AutoLogin) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoLogin.
func (in *AutoLogin) DeepCopy() *AutoLogin {
	if in == nil {
		return nil
	}
	out := new(AutoLogin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoLogin) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoLoginList) DeepCopyInto(out *AutoLoginList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoLogin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoLoginList.
func (in *AutoLoginList) DeepCopy() *AutoLoginList {
	if in == nil {
		return nil
	}
	out := new(AutoLoginList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoLoginList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoLoginObservation) DeepCopyInto(out *AutoLoginObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.CredentialsScheme != nil {
		in, out := &in.CredentialsScheme, &out.CredentialsScheme
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.RevealPassword != nil {
		in, out := &in.RevealPassword, &out.RevealPassword
		*out = new(bool)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.SignOnRedirectURL != nil {
		in, out := &in.SignOnRedirectURL, &out.SignOnRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SignOnURL != nil {
		in, out := &in.SignOnURL, &out.SignOnURL
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoLoginObservation.
func (in *AutoLoginObservation) DeepCopy() *AutoLoginObservation {
	if in == nil {
		return nil
	}
	out := new(AutoLoginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoLoginParameters) DeepCopyInto(out *AutoLoginParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.CredentialsScheme != nil {
		in, out := &in.CredentialsScheme, &out.CredentialsScheme
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.RevealPassword != nil {
		in, out := &in.RevealPassword, &out.RevealPassword
		*out = new(bool)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.SignOnRedirectURL != nil {
		in, out := &in.SignOnRedirectURL, &out.SignOnRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SignOnURL != nil {
		in, out := &in.SignOnURL, &out.SignOnURL
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoLoginParameters.
func (in *AutoLoginParameters) DeepCopy() *AutoLoginParameters {
	if in == nil {
		return nil
	}
	out := new(AutoLoginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoLoginSpec) DeepCopyInto(out *AutoLoginSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoLoginSpec.
func (in *AutoLoginSpec) DeepCopy() *AutoLoginSpec {
	if in == nil {
		return nil
	}
	out := new(AutoLoginSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoLoginStatus) DeepCopyInto(out *AutoLoginStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoLoginStatus.
func (in *AutoLoginStatus) DeepCopy() *AutoLoginStatus {
	if in == nil {
		return nil
	}
	out := new(AutoLoginStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuth) DeepCopyInto(out *BasicAuth) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuth.
func (in *BasicAuth) DeepCopy() *BasicAuth {
	if in == nil {
		return nil
	}
	out := new(BasicAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BasicAuth) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthList) DeepCopyInto(out *BasicAuthList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BasicAuth, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthList.
func (in *BasicAuthList) DeepCopy() *BasicAuthList {
	if in == nil {
		return nil
	}
	out := new(BasicAuthList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BasicAuthList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthObservation) DeepCopyInto(out *BasicAuthObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthObservation.
func (in *BasicAuthObservation) DeepCopy() *BasicAuthObservation {
	if in == nil {
		return nil
	}
	out := new(BasicAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthParameters) DeepCopyInto(out *BasicAuthParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthParameters.
func (in *BasicAuthParameters) DeepCopy() *BasicAuthParameters {
	if in == nil {
		return nil
	}
	out := new(BasicAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthSpec) DeepCopyInto(out *BasicAuthSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthSpec.
func (in *BasicAuthSpec) DeepCopy() *BasicAuthSpec {
	if in == nil {
		return nil
	}
	out := new(BasicAuthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuthStatus) DeepCopyInto(out *BasicAuthStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuthStatus.
func (in *BasicAuthStatus) DeepCopy() *BasicAuthStatus {
	if in == nil {
		return nil
	}
	out := new(BasicAuthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bookmark) DeepCopyInto(out *Bookmark) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bookmark.
func (in *Bookmark) DeepCopy() *Bookmark {
	if in == nil {
		return nil
	}
	out := new(Bookmark)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Bookmark) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BookmarkList) DeepCopyInto(out *BookmarkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Bookmark, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BookmarkList.
func (in *BookmarkList) DeepCopy() *BookmarkList {
	if in == nil {
		return nil
	}
	out := new(BookmarkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BookmarkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BookmarkObservation) DeepCopyInto(out *BookmarkObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationPolicy != nil {
		in, out := &in.AuthenticationPolicy, &out.AuthenticationPolicy
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequestIntegration != nil {
		in, out := &in.RequestIntegration, &out.RequestIntegration
		*out = new(bool)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BookmarkObservation.
func (in *BookmarkObservation) DeepCopy() *BookmarkObservation {
	if in == nil {
		return nil
	}
	out := new(BookmarkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BookmarkParameters) DeepCopyInto(out *BookmarkParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationPolicy != nil {
		in, out := &in.AuthenticationPolicy, &out.AuthenticationPolicy
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.RequestIntegration != nil {
		in, out := &in.RequestIntegration, &out.RequestIntegration
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BookmarkParameters.
func (in *BookmarkParameters) DeepCopy() *BookmarkParameters {
	if in == nil {
		return nil
	}
	out := new(BookmarkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BookmarkSpec) DeepCopyInto(out *BookmarkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BookmarkSpec.
func (in *BookmarkSpec) DeepCopy() *BookmarkSpec {
	if in == nil {
		return nil
	}
	out := new(BookmarkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BookmarkStatus) DeepCopyInto(out *BookmarkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BookmarkStatus.
func (in *BookmarkStatus) DeepCopy() *BookmarkStatus {
	if in == nil {
		return nil
	}
	out := new(BookmarkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignment) DeepCopyInto(out *GroupAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignment.
func (in *GroupAssignment) DeepCopy() *GroupAssignment {
	if in == nil {
		return nil
	}
	out := new(GroupAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentList) DeepCopyInto(out *GroupAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentList.
func (in *GroupAssignmentList) DeepCopy() *GroupAssignmentList {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentObservation) DeepCopyInto(out *GroupAssignmentObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.RetainAssignment != nil {
		in, out := &in.RetainAssignment, &out.RetainAssignment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentObservation.
func (in *GroupAssignmentObservation) DeepCopy() *GroupAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentParameters) DeepCopyInto(out *GroupAssignmentParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIDRef != nil {
		in, out := &in.GroupIDRef, &out.GroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupIDSelector != nil {
		in, out := &in.GroupIDSelector, &out.GroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.RetainAssignment != nil {
		in, out := &in.RetainAssignment, &out.RetainAssignment
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentParameters.
func (in *GroupAssignmentParameters) DeepCopy() *GroupAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentSpec) DeepCopyInto(out *GroupAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentSpec.
func (in *GroupAssignmentSpec) DeepCopy() *GroupAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssignmentStatus) DeepCopyInto(out *GroupAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssignmentStatus.
func (in *GroupAssignmentStatus) DeepCopy() *GroupAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(GroupAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsClaimObservation) DeepCopyInto(out *GroupsClaimObservation) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsClaimObservation.
func (in *GroupsClaimObservation) DeepCopy() *GroupsClaimObservation {
	if in == nil {
		return nil
	}
	out := new(GroupsClaimObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsClaimParameters) DeepCopyInto(out *GroupsClaimParameters) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsClaimParameters.
func (in *GroupsClaimParameters) DeepCopy() *GroupsClaimParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsClaimParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwksObservation) DeepCopyInto(out *JwksObservation) {
	*out = *in
	if in.E != nil {
		in, out := &in.E, &out.E
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Kty != nil {
		in, out := &in.Kty, &out.Kty
		*out = new(string)
		**out = **in
	}
	if in.N != nil {
		in, out := &in.N, &out.N
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwksObservation.
func (in *JwksObservation) DeepCopy() *JwksObservation {
	if in == nil {
		return nil
	}
	out := new(JwksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwksParameters) DeepCopyInto(out *JwksParameters) {
	*out = *in
	if in.E != nil {
		in, out := &in.E, &out.E
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Kty != nil {
		in, out := &in.Kty, &out.Kty
		*out = new(string)
		**out = **in
	}
	if in.N != nil {
		in, out := &in.N, &out.N
		*out = new(string)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(string)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwksParameters.
func (in *JwksParameters) DeepCopy() *JwksParameters {
	if in == nil {
		return nil
	}
	out := new(JwksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeysObservation) DeepCopyInto(out *KeysObservation) {
	*out = *in
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.E != nil {
		in, out := &in.E, &out.E
		*out = new(string)
		**out = **in
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Kty != nil {
		in, out := &in.Kty, &out.Kty
		*out = new(string)
		**out = **in
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = new(string)
		**out = **in
	}
	if in.N != nil {
		in, out := &in.N, &out.N
		*out = new(string)
		**out = **in
	}
	if in.Use != nil {
		in, out := &in.Use, &out.Use
		*out = new(string)
		**out = **in
	}
	if in.X5C != nil {
		in, out := &in.X5C, &out.X5C
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.X5TS256 != nil {
		in, out := &in.X5TS256, &out.X5TS256
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeysObservation.
func (in *KeysObservation) DeepCopy() *KeysObservation {
	if in == nil {
		return nil
	}
	out := new(KeysObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeysParameters) DeepCopyInto(out *KeysParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeysParameters.
func (in *KeysParameters) DeepCopy() *KeysParameters {
	if in == nil {
		return nil
	}
	out := new(KeysParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Oauth) DeepCopyInto(out *Oauth) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Oauth.
func (in *Oauth) DeepCopy() *Oauth {
	if in == nil {
		return nil
	}
	out := new(Oauth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Oauth) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScope) DeepCopyInto(out *OauthAPIScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScope.
func (in *OauthAPIScope) DeepCopy() *OauthAPIScope {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthAPIScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeList) DeepCopyInto(out *OauthAPIScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OauthAPIScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeList.
func (in *OauthAPIScopeList) DeepCopy() *OauthAPIScopeList {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthAPIScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeObservation) DeepCopyInto(out *OauthAPIScopeObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeObservation.
func (in *OauthAPIScopeObservation) DeepCopy() *OauthAPIScopeObservation {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeParameters) DeepCopyInto(out *OauthAPIScopeParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeParameters.
func (in *OauthAPIScopeParameters) DeepCopy() *OauthAPIScopeParameters {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeSpec) DeepCopyInto(out *OauthAPIScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeSpec.
func (in *OauthAPIScopeSpec) DeepCopy() *OauthAPIScopeSpec {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthAPIScopeStatus) DeepCopyInto(out *OauthAPIScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthAPIScopeStatus.
func (in *OauthAPIScopeStatus) DeepCopy() *OauthAPIScopeStatus {
	if in == nil {
		return nil
	}
	out := new(OauthAPIScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthList) DeepCopyInto(out *OauthList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Oauth, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthList.
func (in *OauthList) DeepCopy() *OauthList {
	if in == nil {
		return nil
	}
	out := new(OauthList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthObservation) DeepCopyInto(out *OauthObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationPolicy != nil {
		in, out := &in.AuthenticationPolicy, &out.AuthenticationPolicy
		*out = new(string)
		**out = **in
	}
	if in.AutoKeyRotation != nil {
		in, out := &in.AutoKeyRotation, &out.AutoKeyRotation
		*out = new(bool)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientURI != nil {
		in, out := &in.ClientURI, &out.ClientURI
		*out = new(string)
		**out = **in
	}
	if in.ConsentMethod != nil {
		in, out := &in.ConsentMethod, &out.ConsentMethod
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GroupsClaim != nil {
		in, out := &in.GroupsClaim, &out.GroupsClaim
		*out = make([]GroupsClaimObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImplicitAssignment != nil {
		in, out := &in.ImplicitAssignment, &out.ImplicitAssignment
		*out = new(bool)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.Jwks != nil {
		in, out := &in.Jwks, &out.Jwks
		*out = make([]JwksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LoginMode != nil {
		in, out := &in.LoginMode, &out.LoginMode
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginURI != nil {
		in, out := &in.LoginURI, &out.LoginURI
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURI != nil {
		in, out := &in.LogoURI, &out.LogoURI
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OmitSecret != nil {
		in, out := &in.OmitSecret, &out.OmitSecret
		*out = new(bool)
		**out = **in
	}
	if in.PkceRequired != nil {
		in, out := &in.PkceRequired, &out.PkceRequired
		*out = new(bool)
		**out = **in
	}
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
	if in.PostLogoutRedirectUris != nil {
		in, out := &in.PostLogoutRedirectUris, &out.PostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshTokenLeeway != nil {
		in, out := &in.RefreshTokenLeeway, &out.RefreshTokenLeeway
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTokenRotation != nil {
		in, out := &in.RefreshTokenRotation, &out.RefreshTokenRotation
		*out = new(string)
		**out = **in
	}
	if in.ResponseTypes != nil {
		in, out := &in.ResponseTypes, &out.ResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpointAuthMethod != nil {
		in, out := &in.TokenEndpointAuthMethod, &out.TokenEndpointAuthMethod
		*out = new(string)
		**out = **in
	}
	if in.TosURI != nil {
		in, out := &in.TosURI, &out.TosURI
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.WildcardRedirect != nil {
		in, out := &in.WildcardRedirect, &out.WildcardRedirect
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthObservation.
func (in *OauthObservation) DeepCopy() *OauthObservation {
	if in == nil {
		return nil
	}
	out := new(OauthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthParameters) DeepCopyInto(out *OauthParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationPolicy != nil {
		in, out := &in.AuthenticationPolicy, &out.AuthenticationPolicy
		*out = new(string)
		**out = **in
	}
	if in.AutoKeyRotation != nil {
		in, out := &in.AutoKeyRotation, &out.AutoKeyRotation
		*out = new(bool)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ClientBasicSecretSecretRef != nil {
		in, out := &in.ClientBasicSecretSecretRef, &out.ClientBasicSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientURI != nil {
		in, out := &in.ClientURI, &out.ClientURI
		*out = new(string)
		**out = **in
	}
	if in.ConsentMethod != nil {
		in, out := &in.ConsentMethod, &out.ConsentMethod
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GroupsClaim != nil {
		in, out := &in.GroupsClaim, &out.GroupsClaim
		*out = make([]GroupsClaimParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ImplicitAssignment != nil {
		in, out := &in.ImplicitAssignment, &out.ImplicitAssignment
		*out = new(bool)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.Jwks != nil {
		in, out := &in.Jwks, &out.Jwks
		*out = make([]JwksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LoginMode != nil {
		in, out := &in.LoginMode, &out.LoginMode
		*out = new(string)
		**out = **in
	}
	if in.LoginScopes != nil {
		in, out := &in.LoginScopes, &out.LoginScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoginURI != nil {
		in, out := &in.LoginURI, &out.LoginURI
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURI != nil {
		in, out := &in.LogoURI, &out.LogoURI
		*out = new(string)
		**out = **in
	}
	if in.OmitSecret != nil {
		in, out := &in.OmitSecret, &out.OmitSecret
		*out = new(bool)
		**out = **in
	}
	if in.PkceRequired != nil {
		in, out := &in.PkceRequired, &out.PkceRequired
		*out = new(bool)
		**out = **in
	}
	if in.PolicyURI != nil {
		in, out := &in.PolicyURI, &out.PolicyURI
		*out = new(string)
		**out = **in
	}
	if in.PostLogoutRedirectUris != nil {
		in, out := &in.PostLogoutRedirectUris, &out.PostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshTokenLeeway != nil {
		in, out := &in.RefreshTokenLeeway, &out.RefreshTokenLeeway
		*out = new(float64)
		**out = **in
	}
	if in.RefreshTokenRotation != nil {
		in, out := &in.RefreshTokenRotation, &out.RefreshTokenRotation
		*out = new(string)
		**out = **in
	}
	if in.ResponseTypes != nil {
		in, out := &in.ResponseTypes, &out.ResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpointAuthMethod != nil {
		in, out := &in.TokenEndpointAuthMethod, &out.TokenEndpointAuthMethod
		*out = new(string)
		**out = **in
	}
	if in.TosURI != nil {
		in, out := &in.TosURI, &out.TosURI
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.WildcardRedirect != nil {
		in, out := &in.WildcardRedirect, &out.WildcardRedirect
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthParameters.
func (in *OauthParameters) DeepCopy() *OauthParameters {
	if in == nil {
		return nil
	}
	out := new(OauthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthRoleAssignment) DeepCopyInto(out *OauthRoleAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthRoleAssignment.
func (in *OauthRoleAssignment) DeepCopy() *OauthRoleAssignment {
	if in == nil {
		return nil
	}
	out := new(OauthRoleAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthRoleAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthRoleAssignmentList) DeepCopyInto(out *OauthRoleAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OauthRoleAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthRoleAssignmentList.
func (in *OauthRoleAssignmentList) DeepCopy() *OauthRoleAssignmentList {
	if in == nil {
		return nil
	}
	out := new(OauthRoleAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OauthRoleAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthRoleAssignmentObservation) DeepCopyInto(out *OauthRoleAssignmentObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ResourceSet != nil {
		in, out := &in.ResourceSet, &out.ResourceSet
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthRoleAssignmentObservation.
func (in *OauthRoleAssignmentObservation) DeepCopy() *OauthRoleAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(OauthRoleAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthRoleAssignmentParameters) DeepCopyInto(out *OauthRoleAssignmentParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceSet != nil {
		in, out := &in.ResourceSet, &out.ResourceSet
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthRoleAssignmentParameters.
func (in *OauthRoleAssignmentParameters) DeepCopy() *OauthRoleAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(OauthRoleAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthRoleAssignmentSpec) DeepCopyInto(out *OauthRoleAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthRoleAssignmentSpec.
func (in *OauthRoleAssignmentSpec) DeepCopy() *OauthRoleAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(OauthRoleAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthRoleAssignmentStatus) DeepCopyInto(out *OauthRoleAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthRoleAssignmentStatus.
func (in *OauthRoleAssignmentStatus) DeepCopy() *OauthRoleAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(OauthRoleAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthSpec) DeepCopyInto(out *OauthSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthSpec.
func (in *OauthSpec) DeepCopy() *OauthSpec {
	if in == nil {
		return nil
	}
	out := new(OauthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthStatus) DeepCopyInto(out *OauthStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthStatus.
func (in *OauthStatus) DeepCopy() *OauthStatus {
	if in == nil {
		return nil
	}
	out := new(OauthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAML) DeepCopyInto(out *SAML) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAML.
func (in *SAML) DeepCopy() *SAML {
	if in == nil {
		return nil
	}
	out := new(SAML)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SAML) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLAppSettings) DeepCopyInto(out *SAMLAppSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLAppSettings.
func (in *SAMLAppSettings) DeepCopy() *SAMLAppSettings {
	if in == nil {
		return nil
	}
	out := new(SAMLAppSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SAMLAppSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLAppSettingsList) DeepCopyInto(out *SAMLAppSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SAMLAppSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLAppSettingsList.
func (in *SAMLAppSettingsList) DeepCopy() *SAMLAppSettingsList {
	if in == nil {
		return nil
	}
	out := new(SAMLAppSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SAMLAppSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLAppSettingsObservation) DeepCopyInto(out *SAMLAppSettingsObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLAppSettingsObservation.
func (in *SAMLAppSettingsObservation) DeepCopy() *SAMLAppSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLAppSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLAppSettingsParameters) DeepCopyInto(out *SAMLAppSettingsParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppIDRef != nil {
		in, out := &in.AppIDRef, &out.AppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppIDSelector != nil {
		in, out := &in.AppIDSelector, &out.AppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLAppSettingsParameters.
func (in *SAMLAppSettingsParameters) DeepCopy() *SAMLAppSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLAppSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLAppSettingsSpec) DeepCopyInto(out *SAMLAppSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLAppSettingsSpec.
func (in *SAMLAppSettingsSpec) DeepCopy() *SAMLAppSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(SAMLAppSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLAppSettingsStatus) DeepCopyInto(out *SAMLAppSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLAppSettingsStatus.
func (in *SAMLAppSettingsStatus) DeepCopy() *SAMLAppSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(SAMLAppSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLList) DeepCopyInto(out *SAMLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SAML, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLList.
func (in *SAMLList) DeepCopy() *SAMLList {
	if in == nil {
		return nil
	}
	out := new(SAMLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SAMLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLObservation) DeepCopyInto(out *SAMLObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AcsEndpoints != nil {
		in, out := &in.AcsEndpoints, &out.AcsEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AssertionSigned != nil {
		in, out := &in.AssertionSigned, &out.AssertionSigned
		*out = new(bool)
		**out = **in
	}
	if in.AttributeStatements != nil {
		in, out := &in.AttributeStatements, &out.AttributeStatements
		*out = make([]AttributeStatementsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationPolicy != nil {
		in, out := &in.AuthenticationPolicy, &out.AuthenticationPolicy
		*out = new(string)
		**out = **in
	}
	if in.AuthnContextClassRef != nil {
		in, out := &in.AuthnContextClassRef, &out.AuthnContextClassRef
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.DefaultRelayState != nil {
		in, out := &in.DefaultRelayState, &out.DefaultRelayState
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EmbedURL != nil {
		in, out := &in.EmbedURL, &out.EmbedURL
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.EntityKey != nil {
		in, out := &in.EntityKey, &out.EntityKey
		*out = new(string)
		**out = **in
	}
	if in.EntityURL != nil {
		in, out := &in.EntityURL, &out.EntityURL
		*out = new(string)
		**out = **in
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HTTPPostBinding != nil {
		in, out := &in.HTTPPostBinding, &out.HTTPPostBinding
		*out = new(string)
		**out = **in
	}
	if in.HTTPRedirectBinding != nil {
		in, out := &in.HTTPRedirectBinding, &out.HTTPRedirectBinding
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.HonorForceAuthn != nil {
		in, out := &in.HonorForceAuthn, &out.HonorForceAuthn
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdpIssuer != nil {
		in, out := &in.IdpIssuer, &out.IdpIssuer
		*out = new(string)
		**out = **in
	}
	if in.ImplicitAssignment != nil {
		in, out := &in.ImplicitAssignment, &out.ImplicitAssignment
		*out = new(bool)
		**out = **in
	}
	if in.InlineHookID != nil {
		in, out := &in.InlineHookID, &out.InlineHookID
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.KeyYearsValid != nil {
		in, out := &in.KeyYearsValid, &out.KeyYearsValid
		*out = new(float64)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]KeysObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.RequestCompressed != nil {
		in, out := &in.RequestCompressed, &out.RequestCompressed
		*out = new(bool)
		**out = **in
	}
	if in.ResponseSigned != nil {
		in, out := &in.ResponseSigned, &out.ResponseSigned
		*out = new(bool)
		**out = **in
	}
	if in.SAMLSignedRequestEnabled != nil {
		in, out := &in.SAMLSignedRequestEnabled, &out.SAMLSignedRequestEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SAMLVersion != nil {
		in, out := &in.SAMLVersion, &out.SAMLVersion
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SingleLogoutCertificate != nil {
		in, out := &in.SingleLogoutCertificate, &out.SingleLogoutCertificate
		*out = new(string)
		**out = **in
	}
	if in.SingleLogoutIssuer != nil {
		in, out := &in.SingleLogoutIssuer, &out.SingleLogoutIssuer
		*out = new(string)
		**out = **in
	}
	if in.SingleLogoutURL != nil {
		in, out := &in.SingleLogoutURL, &out.SingleLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.SpIssuer != nil {
		in, out := &in.SpIssuer, &out.SpIssuer
		*out = new(string)
		**out = **in
	}
	if in.SsoURL != nil {
		in, out := &in.SsoURL, &out.SsoURL
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubjectNameIDFormat != nil {
		in, out := &in.SubjectNameIDFormat, &out.SubjectNameIDFormat
		*out = new(string)
		**out = **in
	}
	if in.SubjectNameIDTemplate != nil {
		in, out := &in.SubjectNameIDTemplate, &out.SubjectNameIDTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLObservation.
func (in *SAMLObservation) DeepCopy() *SAMLObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLParameters) DeepCopyInto(out *SAMLParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AcsEndpoints != nil {
		in, out := &in.AcsEndpoints, &out.AcsEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AppSettingsJSON != nil {
		in, out := &in.AppSettingsJSON, &out.AppSettingsJSON
		*out = new(string)
		**out = **in
	}
	if in.AssertionSigned != nil {
		in, out := &in.AssertionSigned, &out.AssertionSigned
		*out = new(bool)
		**out = **in
	}
	if in.AttributeStatements != nil {
		in, out := &in.AttributeStatements, &out.AttributeStatements
		*out = make([]AttributeStatementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationPolicy != nil {
		in, out := &in.AuthenticationPolicy, &out.AuthenticationPolicy
		*out = new(string)
		**out = **in
	}
	if in.AuthnContextClassRef != nil {
		in, out := &in.AuthnContextClassRef, &out.AuthnContextClassRef
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.DefaultRelayState != nil {
		in, out := &in.DefaultRelayState, &out.DefaultRelayState
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.HonorForceAuthn != nil {
		in, out := &in.HonorForceAuthn, &out.HonorForceAuthn
		*out = new(bool)
		**out = **in
	}
	if in.IdpIssuer != nil {
		in, out := &in.IdpIssuer, &out.IdpIssuer
		*out = new(string)
		**out = **in
	}
	if in.ImplicitAssignment != nil {
		in, out := &in.ImplicitAssignment, &out.ImplicitAssignment
		*out = new(bool)
		**out = **in
	}
	if in.InlineHookID != nil {
		in, out := &in.InlineHookID, &out.InlineHookID
		*out = new(string)
		**out = **in
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.KeyYearsValid != nil {
		in, out := &in.KeyYearsValid, &out.KeyYearsValid
		*out = new(float64)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
	if in.RequestCompressed != nil {
		in, out := &in.RequestCompressed, &out.RequestCompressed
		*out = new(bool)
		**out = **in
	}
	if in.ResponseSigned != nil {
		in, out := &in.ResponseSigned, &out.ResponseSigned
		*out = new(bool)
		**out = **in
	}
	if in.SAMLSignedRequestEnabled != nil {
		in, out := &in.SAMLSignedRequestEnabled, &out.SAMLSignedRequestEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SAMLVersion != nil {
		in, out := &in.SAMLVersion, &out.SAMLVersion
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SingleLogoutCertificate != nil {
		in, out := &in.SingleLogoutCertificate, &out.SingleLogoutCertificate
		*out = new(string)
		**out = **in
	}
	if in.SingleLogoutIssuer != nil {
		in, out := &in.SingleLogoutIssuer, &out.SingleLogoutIssuer
		*out = new(string)
		**out = **in
	}
	if in.SingleLogoutURL != nil {
		in, out := &in.SingleLogoutURL, &out.SingleLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.SpIssuer != nil {
		in, out := &in.SpIssuer, &out.SpIssuer
		*out = new(string)
		**out = **in
	}
	if in.SsoURL != nil {
		in, out := &in.SsoURL, &out.SsoURL
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubjectNameIDFormat != nil {
		in, out := &in.SubjectNameIDFormat, &out.SubjectNameIDFormat
		*out = new(string)
		**out = **in
	}
	if in.SubjectNameIDTemplate != nil {
		in, out := &in.SubjectNameIDTemplate, &out.SubjectNameIDTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLParameters.
func (in *SAMLParameters) DeepCopy() *SAMLParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpec) DeepCopyInto(out *SAMLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpec.
func (in *SAMLSpec) DeepCopy() *SAMLSpec {
	if in == nil {
		return nil
	}
	out := new(SAMLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLStatus) DeepCopyInto(out *SAMLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLStatus.
func (in *SAMLStatus) DeepCopy() *SAMLStatus {
	if in == nil {
		return nil
	}
	out := new(SAMLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurePasswordStore) DeepCopyInto(out *SecurePasswordStore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurePasswordStore.
func (in *SecurePasswordStore) DeepCopy() *SecurePasswordStore {
	if in == nil {
		return nil
	}
	out := new(SecurePasswordStore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurePasswordStore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurePasswordStoreList) DeepCopyInto(out *SecurePasswordStoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurePasswordStore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurePasswordStoreList.
func (in *SecurePasswordStoreList) DeepCopy() *SecurePasswordStoreList {
	if in == nil {
		return nil
	}
	out := new(SecurePasswordStoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurePasswordStoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurePasswordStoreObservation) DeepCopyInto(out *SecurePasswordStoreObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.CredentialsScheme != nil {
		in, out := &in.CredentialsScheme, &out.CredentialsScheme
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OptionalField1 != nil {
		in, out := &in.OptionalField1, &out.OptionalField1
		*out = new(string)
		**out = **in
	}
	if in.OptionalField1Value != nil {
		in, out := &in.OptionalField1Value, &out.OptionalField1Value
		*out = new(string)
		**out = **in
	}
	if in.OptionalField2 != nil {
		in, out := &in.OptionalField2, &out.OptionalField2
		*out = new(string)
		**out = **in
	}
	if in.OptionalField2Value != nil {
		in, out := &in.OptionalField2Value, &out.OptionalField2Value
		*out = new(string)
		**out = **in
	}
	if in.OptionalField3 != nil {
		in, out := &in.OptionalField3, &out.OptionalField3
		*out = new(string)
		**out = **in
	}
	if in.OptionalField3Value != nil {
		in, out := &in.OptionalField3Value, &out.OptionalField3Value
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(string)
		**out = **in
	}
	if in.RevealPassword != nil {
		in, out := &in.RevealPassword, &out.RevealPassword
		*out = new(bool)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurePasswordStoreObservation.
func (in *SecurePasswordStoreObservation) DeepCopy() *SecurePasswordStoreObservation {
	if in == nil {
		return nil
	}
	out := new(SecurePasswordStoreObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurePasswordStoreParameters) DeepCopyInto(out *SecurePasswordStoreParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.CredentialsScheme != nil {
		in, out := &in.CredentialsScheme, &out.CredentialsScheme
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.OptionalField1 != nil {
		in, out := &in.OptionalField1, &out.OptionalField1
		*out = new(string)
		**out = **in
	}
	if in.OptionalField1Value != nil {
		in, out := &in.OptionalField1Value, &out.OptionalField1Value
		*out = new(string)
		**out = **in
	}
	if in.OptionalField2 != nil {
		in, out := &in.OptionalField2, &out.OptionalField2
		*out = new(string)
		**out = **in
	}
	if in.OptionalField2Value != nil {
		in, out := &in.OptionalField2Value, &out.OptionalField2Value
		*out = new(string)
		**out = **in
	}
	if in.OptionalField3 != nil {
		in, out := &in.OptionalField3, &out.OptionalField3
		*out = new(string)
		**out = **in
	}
	if in.OptionalField3Value != nil {
		in, out := &in.OptionalField3Value, &out.OptionalField3Value
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(string)
		**out = **in
	}
	if in.RevealPassword != nil {
		in, out := &in.RevealPassword, &out.RevealPassword
		*out = new(bool)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurePasswordStoreParameters.
func (in *SecurePasswordStoreParameters) DeepCopy() *SecurePasswordStoreParameters {
	if in == nil {
		return nil
	}
	out := new(SecurePasswordStoreParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurePasswordStoreSpec) DeepCopyInto(out *SecurePasswordStoreSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurePasswordStoreSpec.
func (in *SecurePasswordStoreSpec) DeepCopy() *SecurePasswordStoreSpec {
	if in == nil {
		return nil
	}
	out := new(SecurePasswordStoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurePasswordStoreStatus) DeepCopyInto(out *SecurePasswordStoreStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurePasswordStoreStatus.
func (in *SecurePasswordStoreStatus) DeepCopy() *SecurePasswordStoreStatus {
	if in == nil {
		return nil
	}
	out := new(SecurePasswordStoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedCredentials) DeepCopyInto(out *SharedCredentials) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedCredentials.
func (in *SharedCredentials) DeepCopy() *SharedCredentials {
	if in == nil {
		return nil
	}
	out := new(SharedCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedCredentials) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedCredentialsList) DeepCopyInto(out *SharedCredentialsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SharedCredentials, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedCredentialsList.
func (in *SharedCredentialsList) DeepCopy() *SharedCredentialsList {
	if in == nil {
		return nil
	}
	out := new(SharedCredentialsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedCredentialsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedCredentialsObservation) DeepCopyInto(out *SharedCredentialsObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ButtonField != nil {
		in, out := &in.ButtonField, &out.ButtonField
		*out = new(string)
		**out = **in
	}
	if in.Checkbox != nil {
		in, out := &in.Checkbox, &out.Checkbox
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedCredentialsObservation.
func (in *SharedCredentialsObservation) DeepCopy() *SharedCredentialsObservation {
	if in == nil {
		return nil
	}
	out := new(SharedCredentialsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedCredentialsParameters) DeepCopyInto(out *SharedCredentialsParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ButtonField != nil {
		in, out := &in.ButtonField, &out.ButtonField
		*out = new(string)
		**out = **in
	}
	if in.Checkbox != nil {
		in, out := &in.Checkbox, &out.Checkbox
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedCredentialsParameters.
func (in *SharedCredentialsParameters) DeepCopy() *SharedCredentialsParameters {
	if in == nil {
		return nil
	}
	out := new(SharedCredentialsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedCredentialsSpec) DeepCopyInto(out *SharedCredentialsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedCredentialsSpec.
func (in *SharedCredentialsSpec) DeepCopy() *SharedCredentialsSpec {
	if in == nil {
		return nil
	}
	out := new(SharedCredentialsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedCredentialsStatus) DeepCopyInto(out *SharedCredentialsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedCredentialsStatus.
func (in *SharedCredentialsStatus) DeepCopy() *SharedCredentialsStatus {
	if in == nil {
		return nil
	}
	out := new(SharedCredentialsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Swa) DeepCopyInto(out *Swa) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Swa.
func (in *Swa) DeepCopy() *Swa {
	if in == nil {
		return nil
	}
	out := new(Swa)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Swa) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwaList) DeepCopyInto(out *SwaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Swa, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwaList.
func (in *SwaList) DeepCopy() *SwaList {
	if in == nil {
		return nil
	}
	out := new(SwaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SwaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwaObservation) DeepCopyInto(out *SwaObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ButtonField != nil {
		in, out := &in.ButtonField, &out.ButtonField
		*out = new(string)
		**out = **in
	}
	if in.Checkbox != nil {
		in, out := &in.Checkbox, &out.Checkbox
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwaObservation.
func (in *SwaObservation) DeepCopy() *SwaObservation {
	if in == nil {
		return nil
	}
	out := new(SwaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwaParameters) DeepCopyInto(out *SwaParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ButtonField != nil {
		in, out := &in.ButtonField, &out.ButtonField
		*out = new(string)
		**out = **in
	}
	if in.Checkbox != nil {
		in, out := &in.Checkbox, &out.Checkbox
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(string)
		**out = **in
	}
	if in.PreconfiguredApp != nil {
		in, out := &in.PreconfiguredApp, &out.PreconfiguredApp
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwaParameters.
func (in *SwaParameters) DeepCopy() *SwaParameters {
	if in == nil {
		return nil
	}
	out := new(SwaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwaSpec) DeepCopyInto(out *SwaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwaSpec.
func (in *SwaSpec) DeepCopy() *SwaSpec {
	if in == nil {
		return nil
	}
	out := new(SwaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SwaStatus) DeepCopyInto(out *SwaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SwaStatus.
func (in *SwaStatus) DeepCopy() *SwaStatus {
	if in == nil {
		return nil
	}
	out := new(SwaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeField) DeepCopyInto(out *ThreeField) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeField.
func (in *ThreeField) DeepCopy() *ThreeField {
	if in == nil {
		return nil
	}
	out := new(ThreeField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThreeField) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFieldList) DeepCopyInto(out *ThreeFieldList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThreeField, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFieldList.
func (in *ThreeFieldList) DeepCopy() *ThreeFieldList {
	if in == nil {
		return nil
	}
	out := new(ThreeFieldList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThreeFieldList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFieldObservation) DeepCopyInto(out *ThreeFieldObservation) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ButtonSelector != nil {
		in, out := &in.ButtonSelector, &out.ButtonSelector
		*out = new(string)
		**out = **in
	}
	if in.CredentialsScheme != nil {
		in, out := &in.CredentialsScheme, &out.CredentialsScheme
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.ExtraFieldSelector != nil {
		in, out := &in.ExtraFieldSelector, &out.ExtraFieldSelector
		*out = new(string)
		**out = **in
	}
	if in.ExtraFieldValue != nil {
		in, out := &in.ExtraFieldValue, &out.ExtraFieldValue
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordSelector != nil {
		in, out := &in.PasswordSelector, &out.PasswordSelector
		*out = new(string)
		**out = **in
	}
	if in.RevealPassword != nil {
		in, out := &in.RevealPassword, &out.RevealPassword
		*out = new(bool)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.SignOnMode != nil {
		in, out := &in.SignOnMode, &out.SignOnMode
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFieldObservation.
func (in *ThreeFieldObservation) DeepCopy() *ThreeFieldObservation {
	if in == nil {
		return nil
	}
	out := new(ThreeFieldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFieldParameters) DeepCopyInto(out *ThreeFieldParameters) {
	*out = *in
	if in.AccessibilityErrorRedirectURL != nil {
		in, out := &in.AccessibilityErrorRedirectURL, &out.AccessibilityErrorRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilityLoginRedirectURL != nil {
		in, out := &in.AccessibilityLoginRedirectURL, &out.AccessibilityLoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.AccessibilitySelfService != nil {
		in, out := &in.AccessibilitySelfService, &out.AccessibilitySelfService
		*out = new(bool)
		**out = **in
	}
	if in.AdminNote != nil {
		in, out := &in.AdminNote, &out.AdminNote
		*out = new(string)
		**out = **in
	}
	if in.AppLinksJSON != nil {
		in, out := &in.AppLinksJSON, &out.AppLinksJSON
		*out = new(string)
		**out = **in
	}
	if in.AutoSubmitToolbar != nil {
		in, out := &in.AutoSubmitToolbar, &out.AutoSubmitToolbar
		*out = new(bool)
		**out = **in
	}
	if in.ButtonSelector != nil {
		in, out := &in.ButtonSelector, &out.ButtonSelector
		*out = new(string)
		**out = **in
	}
	if in.CredentialsScheme != nil {
		in, out := &in.CredentialsScheme, &out.CredentialsScheme
		*out = new(string)
		**out = **in
	}
	if in.EnduserNote != nil {
		in, out := &in.EnduserNote, &out.EnduserNote
		*out = new(string)
		**out = **in
	}
	if in.ExtraFieldSelector != nil {
		in, out := &in.ExtraFieldSelector, &out.ExtraFieldSelector
		*out = new(string)
		**out = **in
	}
	if in.ExtraFieldValue != nil {
		in, out := &in.ExtraFieldValue, &out.ExtraFieldValue
		*out = new(string)
		**out = **in
	}
	if in.HideIos != nil {
		in, out := &in.HideIos, &out.HideIos
		*out = new(bool)
		**out = **in
	}
	if in.HideWeb != nil {
		in, out := &in.HideWeb, &out.HideWeb
		*out = new(bool)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Logo != nil {
		in, out := &in.Logo, &out.Logo
		*out = new(string)
		**out = **in
	}
	if in.PasswordSelector != nil {
		in, out := &in.PasswordSelector, &out.PasswordSelector
		*out = new(string)
		**out = **in
	}
	if in.RevealPassword != nil {
		in, out := &in.RevealPassword, &out.RevealPassword
		*out = new(bool)
		**out = **in
	}
	if in.SharedPassword != nil {
		in, out := &in.SharedPassword, &out.SharedPassword
		*out = new(string)
		**out = **in
	}
	if in.SharedUsername != nil {
		in, out := &in.SharedUsername, &out.SharedUsername
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRegex != nil {
		in, out := &in.URLRegex, &out.URLRegex
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplate != nil {
		in, out := &in.UserNameTemplate, &out.UserNameTemplate
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplatePushStatus != nil {
		in, out := &in.UserNameTemplatePushStatus, &out.UserNameTemplatePushStatus
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateSuffix != nil {
		in, out := &in.UserNameTemplateSuffix, &out.UserNameTemplateSuffix
		*out = new(string)
		**out = **in
	}
	if in.UserNameTemplateType != nil {
		in, out := &in.UserNameTemplateType, &out.UserNameTemplateType
		*out = new(string)
		**out = **in
	}
	if in.UsernameSelector != nil {
		in, out := &in.UsernameSelector, &out.UsernameSelector
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFieldParameters.
func (in *ThreeFieldParameters) DeepCopy() *ThreeFieldParameters {
	if in == nil {
		return nil
	}
	out := new(ThreeFieldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFieldSpec) DeepCopyInto(out *ThreeFieldSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFieldSpec.
func (in *ThreeFieldSpec) DeepCopy() *ThreeFieldSpec {
	if in == nil {
		return nil
	}
	out := new(ThreeFieldSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFieldStatus) DeepCopyInto(out *ThreeFieldStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFieldStatus.
func (in *ThreeFieldStatus) DeepCopy() *ThreeFieldStatus {
	if in == nil {
		return nil
	}
	out := new(ThreeFieldStatus)
	in.DeepCopyInto(out)
	return out
}
